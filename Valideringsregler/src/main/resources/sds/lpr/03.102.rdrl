package sds.lpr;

import java.lang.Number;
import com.dxc.lpr3.domain.ForloebElement;
import com.dxc.lpr3.domain.ForloebReference;
import com.dxc.lpr3.domain.SksKodeLister;

rule "03.102"
	@lprmeta.isValidForDUSASAbroadReports(true)
	@lprmeta.productionDate(1569529407)
	@lprmeta.reportReceivedFromDate(0)
	@lprmeta.isValidForLPRReports(true)
	@lprmeta.episodeOfCareStartFromDate(0)
	@lprmeta.errorType(ERROR)
	@lprmeta.encounterStartFromDate(0)
	@lprmeta.encounterEndToDate(9223372036854775807)
	@lprmeta.ruleGroup(REFERENCE)
	@lprmeta.errorNumber(3102)
	@lprmeta.archivedDate(0)
	@lprmeta.type(REPORT_VALIDATION)
	@lprmeta.hasProdVersion(true)
	@lprmeta.reportReceivedToDate(9223372036854775807)
	@lprmeta.encounterEndFromDate(0)
	@lprmeta.isValidForPrivateSectorReports(true)
	@lprmeta.encounterStartToDate(9223372036854775807)
	@lprmeta.episodeOfCareStartToDate(9223372036854775807)
	@lprmeta.errorText(Hvis referencetype, der sammenkæder to forløbselementer, er i listen over referencetyper, der forudsætter, at forløbselementerne refererer til forskellige patienter, så skal patientID for de to forløbselementer være forskellige. (teknik) (barn til mor))
	@lprmeta.isValidForDUSASSpecialityReports(true)
	dialect "mvel"
	when
		F : ForloebElement( harStartTidspunkt(), reference != null , reference.forloebElement != null , reference.kode.gyldigIKodeListePaaDato("forloeb_reftype_diff_id", startTidspunkt) , reference.forloebElement.patient.erSammePatient(F.patient) == true )
	then
end
